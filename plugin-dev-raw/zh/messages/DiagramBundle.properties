uml.class.diagram.file.name=''{0}'' 類圖
building.diagram=建置 {0}
error=錯誤
new.class=新類
new.enum=新枚舉
new.record=新記錄
new.interface=新接口
cant.create.element=無法在目錄 {1} 中創建 {0}
add.new.field.title=向 {0} 添加新字段或常數
add.new.enum.constant.title=向 {0} 添加新的枚舉常數
create.new.method.dialog.title=創建新方法
create.new.constructor.dialog.title=創建新構造函數
create.method=創建(&C)
final.class.cant.be.inherited=類 {0} 為 final
node.is.interface=接口只能繼承一個接口
error.cant.create.edge=無法創建關係鏈接
preview=預覽
this.will.remove.relationship.link.between.classes=這將移除類之間的關係鏈接並修改類 {0}。繼續？
remove.relationship.link=移除關係鏈接
class.must.be.abstract.or.implement.methods=類 ''{0}'' 必須宣告為 abstract 或實作所需的 abstract 方法
class.must.be.abstract.title=實作方法或宣告抽象類
generate.methods=生成方法
make.abstract=設為 abstract
initializer.is.empty=初始值設定項為空
constant.in.interface.must.have.initializer=接口中的常數必須具有初始值設定項
class.is.readonly=類 ''{0}'' 是唯讀的
file.is.readonly=檔案 ''{0}'' 是唯讀的
annotation.class.cant.be.extended.or.implemented=註解不能繼承/實作其他類/接口
remove.annotation.from.class=從 {1} 中移除註解 @{0}
relationship.already.exists={0} 與 {1} 之間的關係已存在
show.supers.for={0} 的超類
UML=UML
uml.change.list.name=變更
uml.file.name.for.changes=''{0}'' 的變更
other=其他
select.uml.provider=選擇圖類型
dependencies=依賴項
uml.structure.view=圖元素
abstract=抽象(&B)
set.up.jdk=未設定 JDK
make.class.abstract=將類設為 abstract
change.visibility.group.text=更改可見性級別
change.scope.group.text=更改範圍
modules.diagram.presentable.name=專案模組
uml.0.presentable.name={0} 類圖
uml.jigsaw.presentable.name=Java 模組
diff.presentable.name=顯示差異
add.modules.libraries=添加模組和庫...
looking.for.dependencies=尋找依賴
dependencies.for.module=模組 ''{0}'' 的依賴
show.modules.dependencies=顯示模組依賴
fit.content.after.layout=在布局後調整內容(&F)
do.relayout.when.new.elements.were.added=添加新元素時重新布局(&R)
default.layout=預設布局(&L)：
default.scope=預設作用域(&S)：
change.list.contains.too.many.files=更改列表 ''{0}'' 包含超過 {1} 個檔案
show.categories.title=顯示類別
uml.java.calculating.dependencies=正在計算依賴關係
uml.java.analyzing.0=正在分析 {0}
uml.java.package.title=軟體套件
uml.java.default.package.title=頂層軟體套件
action.UML.Find.text=尋找元素圖
action.UML.ShowStructure.text=查看結構
action.UML.SaveDiagram.text=儲存 UML 圖
action.Uml.ShowDiff.text=以 UML 顯示差異
action.Uml.ExpandNodes.text=展開節點
action.Uml.CollapseNodes.text=摺疊節點
action.Diagram.Layout.CustomLayouter.text=圖特定
action.Diagram.DeselectAll.text=取消全選
action.Diagram.SelectAll.text=全選
action.UML.ShowChanges.text=以 UML 顯示本地變更
action.ShowUmlDiagramPopup.text=顯示 UML 彈出視窗
action.ShowUmlDiagram.text=顯示 UML 圖
action.Uml.NewElement.text=新建
group.Uml.NewGroup.text=圖表
group.UML.Group.text=圖表
group.UML.Group.description=圖表
group.UML.Group.Simple.text=圖表
group.UML.Group.Simple.description=圖表
group.UML.EditorGroup.text=圖表
group.UML.EditorGroup.description=圖表
configurable.UmlConfigurable.display.name=圖表
settings.select.categories.text=選擇將在顯示圖表時啟用的類別
color.descriptor.node.header=節點//節點標頭
color.descriptor.node.background=節點//節點背景
color.descriptor.realization.edge=邊緣//實作邊緣
color.descriptor.generalization.edge=邊緣//泛化邊緣
color.descriptor.default.edge=邊緣//預設邊緣
color.descriptor.annotation.edge=邊緣//註解邊緣
color.descriptor.inner.class.edge=邊緣//內部類邊緣
color.descriptor.note.background=註釋//註釋背景
color.descriptor.note.border=註釋//註釋邊框
dialog.message.can.t.save.converted.content.into.file.check.read.only.status=無法將轉換的內容儲存到檔案中。請檢查是否為唯讀狀態。
dialog.title.old.diagram.format=舊圖格式
dialog.message.this.file.has.old.format.would.you.like.to.convert.it=此檔案為舊格式。要轉換嗎?
action.text.show.0.1=顯示 {0}{1}…
dialog.description.save.uml.class.diagram.as.uml=將 UML 類圖另存為 .uml
dialog.title.save.file=儲存檔案
configurable.display.name.diagrams=圖表
group.action.text.new=新建
dialog.title.edit.note=編輯註釋
dialog.message.note.text=註釋文本
popup.title.select.target.node=選擇目標節點                         
goto.class.prompt.text.enter.class.name.to.add=輸入要添加的類名
dialog.title.add.a.note=添加註釋
popup.title.select.change.list=選擇變更列表
filetype.diagram.description=圖
filetype.diagram.display.name=圖
task.title.calculating.paths=正在計算路徑
dialog.message.can.t.show.more.than.0.changes.at.one.diagram=在一個圖中顯示的變更數不能超過 {0} 個。
action.name.show.diagram.structure=顯示圖結構
action.name.set.edge.creation.mode=設定邊緣創建模式
action.name.select.all=全選
command.edit.note=編輯註釋
notification.message.scope.has.been.changed.to.b.all.b=範圍已被更改為<b>全部</b>
action.name.change.visibility.to.0=將可見性更改為 {0}
action.name.safe.delete=安全刪除
action.name.show.dependencies=顯示依賴項
action.name.collapse.nodes=摺疊節點
action.name.expand.nodes=展開節點
action.name.change.scope.to.0=將範圍更改為 {0}
action.name.create.line=創建行
action.name.add.note=添加註釋
action.name.save.diagram=儲存圖
action.name.deselect.all=取消全選
action.name.add.elements2=添加元素
action.name.enable.category=啟用 {0}
action.name.disable.category=禁用 {0}
show.intentions.for.node=顯示節點的意圖
add.class.to.diagram=將類添加到圖…
show.parents=顯示父級
show.implementations=顯示實作
creates.a.relationship.between.nodes=創建節點之間的關係
line.to=行目標…
searching.for.elements=正在搜尋元素
can.t.save.diagram.to.0=無法將圖儲存到 {0}
edge.creation.mode=邊緣創建模式
changes.for.revision.0=修訂 {0} 的變更
add.note.action.title=註釋
uml.dependencies.settings.group.title=依賴項
category.name.show.neighbours.of.selected.nodes=顯示所選節點的近鄰
category.name.show.paths.root.selection=顯示路徑: 根 -> 選擇
category.name.fields=欄位
category.name.constructors=構造函數
category.name.methods=方法
category.name.properties=屬性
category.name.inner.classes=內部類
category.name.dependencies=依賴項
category.name.all=所有
category.name.constants=常數
category.name.details=詳細資訊
uml.action.name=圖
visibility.level.package=public + package
visibility.level.all=所有
delete.selection.command.name=移除所選物件
add.element.to.diagram=向圖中添加元素
unknown.uml.file=未知 UML 檔案
show.diagram.popup.title={1} 的 {0}
unknown.uml.action=未知 UML 操作
cant.annotate.class.0=無法註解類 {0}
diagram.edge.origins=邊緣原點

# suppress inspection "UnusedProperty"
diagram.layout.compact.orthogonal=緊湊
# suppress inspection "UnusedProperty"
diagram.layout.component=組件
# suppress inspection "UnusedProperty"
diagram.layout.directed.orthogonal=定向(從下至上)
# suppress inspection "UnusedProperty"
diagram.layout.hierarchic=分層
# suppress inspection "UnusedProperty"
diagram.layout.hierarchic.compact=分層緊湊
# suppress inspection "UnusedProperty"
diagram.layout.orthogonal.groups=正交群
# suppress inspection "UnusedProperty"
diagram.layout.channel=通道
# suppress inspection "UnusedProperty"
diagram.layout.series.parallel=串並聯
# suppress inspection "UnusedProperty"
diagram.layout.circular=迴圈
# suppress inspection "UnusedProperty"
diagram.layout.circular.edge.bundled=邊緣捆綁(圓形)
# suppress inspection "UnusedProperty"
diagram.layout.radial=徑向
# suppress inspection "UnusedProperty"
diagram.layout.radial.edge.bundled=邊緣捆綁(徑向)
# suppress inspection "UnusedProperty"
diagram.layout.single.cycle=單迴圈
# suppress inspection "UnusedProperty"
diagram.layout.ar.tree=緊湊
# suppress inspection "UnusedProperty"
diagram.layout.balloon=氣球
# suppress inspection "UnusedProperty"
diagram.layout.balloon.edge.bundled=邊緣捆綁(氣球)
# suppress inspection "UnusedProperty"
diagram.layout.family.tree=系列
# suppress inspection "UnusedProperty"
diagram.layout.generic.tree=泛型
# suppress inspection "UnusedProperty"
diagram.layout.hv.tree=寬
# suppress inspection "UnusedProperty"
diagram.layout.organic=有機
# suppress inspection "UnusedProperty"
diagram.layout.organic.edge.bundled=邊緣捆綁(有機)
# suppress inspection "UnusedProperty"
diagram.layout.random=隨機
# Specific for the concrete diagram type
# suppress inspection "UnusedProperty"
diagram.layout.custom=自訂

diagram.scope.all=所有
diagram.scope.project.files=專案檔案
diagram.scope.non-project.files=非專案檔案
diagram.scope.production=生產
diagram.scope.tests=測試
group.Diagram.MergeEdgesGroup.text=合併邊緣
color.descriptor.node.sloppy.background=節點//概覽節點背景
color.descriptor.node.border=節點//節點邊框
color.descriptor.selected.node=節點//所選節點邊框
color.descriptor.note.sloppy.background=註釋//概覽註釋背景
color.descriptor.selected.edge=邊緣//邊緣選區
color.descriptor.bend=彎曲//彎曲
color.descriptor.selected.bend=彎曲//彎曲選區
color.descriptor.hot.spot=熱點
color.descriptor.port=連接埠
color.descriptor.snap.lines=對齊行
color.descriptor.selection.box.border=選擇框//選擇框邊框
color.descriptor.selection.box.background=選擇框//選擇框背景
notification.can.t.open.diagram.while.indexing.is.in.progress=編制索引期間無法使用圖表
category.name.show.borders=顯示邊框
group.Diagram.AppearanceGroup.text=外觀
action.Diagram.SearchItemOnWeb.text=使用 Google 搜尋
group.Uml.NodeCellEditorPopup.QuickActions.text=顯示
group.Uml.NodeCellEditorPopup.GoTo.text=轉到
group.Diagram.ExportGroup.text=匯出圖
color.descriptor.fine.grid=細網格
color.descriptor.coarse.grid=粗網格
diagram.build.progress.preparing.data=正在準備資料…
diagram.build.progress.starting.data.model.build=正在開始資料模型建置…
diagram.build.progress.building.data.model=正在建置資料模型…
diagram.build.progress.opening.diagram=正在開啟圖
diagram.build.progress.finishing.diagram.build=正在完成…
java.build.progress.searching.for.classes=正在搜尋類…
java.build.progress.searching.for.class.members=正在搜尋類成員…
java.build.progress.inferring.nullability=正在推斷可空性…
java.build.progress.inferring.relationships=正在推斷關係…
java.build.progress.analyzing=正在分析 {0}
layout.on.category.switch=類別開關上的布局(&C):
shorten.node.items.on.length=縮短長度上的節點條目(&I):
layout.animation.duration=布局動畫持續時間(&A):
diagram.layout.on.category.switch.never=從不
diagram.layout.on.category.switch.with.current.layouter=使用當前布局器
diagram.layout.on.category.switch.with.light.layouter=使用簡易布局器
diagram.settings.layout.title=布局
diagram.settings.appearance.title=外觀
diagram.settings.enable.animations=啟用動畫(&A)
action.Diagram.DeleteSelection.text=刪除
group.change.content.name=內容
visibility.level.public=僅 public
visibility.level.protected=public + package + protected
action.Diagram.OpenSettings.text=開啟圖表設定
group.Uml.Refactoring.text=重構
group.UML.SourceActionsGroup.text=所選元素操作
group.Uml.SourceActionsGroup.QuickActions.text=顯示
group.Uml.SourceActionsGroup.GoTo.text=轉到
add.note.with.docs.action.title=使用元素文檔進行備註
add.note.no.docs.found=未找到任何文檔
group.Diagram.ExportToFileGroup.text=匯出到檔案
group.Diagram.OpenInOnlineEditorGroup.text=在 Web 編輯器中開啟
action.Diagram.ExportToFileGroup.DotWithPositions.text=帶位置的 Graphviz.dot
action.Diagram.ExportToFileGroup.Dot.text=Graphviz .dot
action.Diagram.ExportToFileGroup.Mxgraph.text=JGraph .drawio
action.Diagram.ExportToFileGroup.Plantuml.text=Plantuml
action.Diagram.ExportToFileGroup.Graphml.text=YEd .graphml
action.Diagram.OpenInOnlineEditorGroup.DotWithPositions.text=帶位置的 Graphviz.dot
action.Diagram.OpenInOnlineEditorGroup.Dot.text=Graphviz .dot
action.Diagram.OpenInOnlineEditorGroup.Mxgraph.text=JGraph .drawio
action.Diagram.OpenInOnlineEditorGroup.Plantuml.text=Plantuml
action.Diagram.OpenInOnlineEditorGroup.Graphml.text=YEd .graphml
group.Diagram.CopyToClipboardGroup.text=複製到剪貼簿
action.Diagram.ExportToFileGroup.Mermaid.text=Mermaid .md
action.Diagram.OpenInOnlineEditorGroup.Mermaid.text=Mermaid Live
action.Diagram.CopyToClipboardGroup.DotWithPositions.text=作為具有位置的 Graphviz DOT
action.Diagram.CopyToClipboardGroup.Dot.text=作為 Graphviz DOT
action.Diagram.CopyToClipboardGroup.Mermaid.text=作為 Mermaid
action.Diagram.CopyToClipboardGroup.Plantuml.text=作為 Plantuml
change.ordering.group.text=變更專案順序
action.name.change.ordering.to.0=將專案順序變更為 {0}
ordering.as.in.source.code=按宣告順序排序
ordering.alphabetically=按字母順序排序
ordering.by.visibility=按可見性排序
diagram.node.item.style=Node item style
diagram.node.style.plain=純
diagram.node.style.with.types.aligned=With types aligned
diagram.export.progress=Exporting…
group.Diagram.ExportAndCopyGroup.text=匯出圖
action.Diagram.RefreshDataModelManually.text=Refresh Data Model
color.descriptor.highlighted.node=Nodes//Highlighted node border
diagram.focusview.focus.view=Focus View
dialog.diagram.focus.view.on=Focus View On
dialog.diagram.focus.view.on.paths.between.two.nodes.title=Focus View On Paths Between Two Nodes
dialog.diagram.focus.view.on.node.neighbourhood.title=Focus View On Node Neighbourhood
dialog.diagram.focus.view.on.cycles.title=Focus View On Cycles
dialog.diagram.focus.view.on.directed.paths.from.0.to.1=Directed paths from {0} to {1}
dialog.diagram.focus.view.on.directed.paths.from.0=Directed paths from {0}
dialog.diagram.focus.view.on.directed.paths.to.0=Directed paths to {0}
dialog.diagram.focus.view.on.directed.paths.in.both.directions=Directed paths in both directions
dialog.diagram.focus.view.on.undirected.paths=Undirected paths
dialog.diagram.focus.view.on.directed.cycles=Directed cycles
dialog.diagram.focus.view.on.undirected.cycles=Undirected cycles
dialog.diagram.focus.view.find.button.title=尋找
diagram.focus.view.no.path.has.been.found.notification=No path has been found
dialog.diagram.focus.view.path.filter=Show Paths
dialog.diagram.focus.view.path.filter.all=所有
dialog.diagram.focus.view.path.filter.k.shortest=K shortest:
dialog.diagram.focus.view.cycles.filter=Show Cycles
dialog.diagram.focus.view.cycles.filter.all=所有
dialog.diagram.focus.view.cycles.filter.containing.all.selected.nodes=Containing all selected nodes
dialog.diagram.focus.view.cycles.filter.containing.any.selected.node=Containing any selected node
dialog.diagram.measure.centrality=Measure Centrality
dialog.diagram.centrality.number.of.connected.edges=Number of connected edges
dialog.diagram.centrality.number.of.connected.edges.description=Shows the number of the incoming, outgoing or overall edges incident to a node (measures incoming, outgoing and overall degree)
dialog.diagram.centrality.graph.centrality=Graph centrality
dialog.diagram.centrality.graph.centrality.description=Shows reciprocal of the maximum of all shortest path distances from a node to all other nodes
dialog.diagram.centrality.nodes.betweenness.centrality=Node betweenness centrality
dialog.diagram.centrality.nodes.betweenness.centrality.description=Shows how often a node/edge lies on a shortest path between each pair of nodes
dialog.diagram.centrality.closeness.centrality=Closeness centrality
dialog.diagram.centrality.closeness.centrality.description=Shows the reciprocal of the sum of shortest path distances of a node to all other nodes
dialog.diagram.centrality.edges.to.consider=Edges to Consider
dialog.diagram.centrality.edges.to.consider.incoming=傳入
dialog.diagram.centrality.edges.to.consider.outgoing=Outgoing
dialog.diagram.centrality.consider.edge.directions=Consider edge directions
dialog.diagram.centrality.measure.button.title=Measure
diagram.path.finding=Path finding…
diagram.computing.characteristics=Computing graph characteristics…
diagram.measuring.centrality=Measuring centrality…
dialog.diagram.graph.characteristics.title=Graph Common Characteristics
diagram.graph.characteristics.group.common=通用
diagram.graph.characteristics.group.connectivity=Connectivity
diagram.graph.characteristics.group.cycles=周期
diagram.graph.characteristics.node.count=Node count:
diagram.graph.characteristics.node.count.context.help=Number of nodes in the graph
diagram.graph.characteristics.edge.count=Edge count:
diagram.graph.characteristics.edge.count.context.help=Number of edges in the graph
diagram.graph.characteristics.average.degree=Average degree:
diagram.graph.characteristics.average.degree.context.help=The <i>average degree</i> measures the number of edges in comparison to the number of nodes and is defined as: <code>numberOfEdges / numberOfNodes</code>
diagram.graph.characteristics.density=Density:
diagram.graph.characteristics.density.context.help=The <i>density</i> is the ratio of edges of the graph to the maximum possible number of edges and is defined as: <code>numberOfEdges / (numberOfNodes * (numberOfNodes - 1))</code>
diagram.graph.characteristics.contains.self.loops=Contains self-loops:
diagram.graph.characteristics.contains.self.loops.context.help=An edge is called <i>self-loop</i> if its source and target are the same node
diagram.graph.characteristics.is.simple=Is simple:
diagram.graph.characteristics.is.simple.context.help=A graph is called <i>simple</i> if it contains no two distinct edges <code>e1, e2</code> where <code>e1.source()</code> equals <code>e2.source()</code> and <code>e1.target()</code> equals <code>e2.target()</code>
diagram.graph.characteristics.contains.multiple.edges=Contains multiple edges:
diagram.graph.characteristics.contains.multiple.edges.context.help=Two distinct edges <code>e1, e2</code> are called <i>multiple edges</i> if they connect the same pairs of nodes in either direction
diagram.graph.characteristics.is.connected=Is connected:
diagram.graph.characteristics.is.connected.context.help=A graph is called <i>connected</i> if there exists an undirected path of edges between every pair of nodes
diagram.graph.characteristics.is.biconnected=Is biconnected:
diagram.graph.characteristics.is.biconnected.context.help=A graph is called <i>biconnected</i> if it has no cut vertex or articulation point, i.e. no node whose removal disconnects the graph
diagram.graph.characteristics.is.strongly.connected=Is strongly connected:
diagram.graph.characteristics.is.strongly.connected.context.help=A graph is called <i>strongly connected</i> if there exists a directed path between each pair of nodes
diagram.graph.characteristics.is.acyclic=Is acyclic:
diagram.graph.characteristics.is.acyclic.context.help=A graph is called <i>acyclic</i> if it contains no directed cycle
diagram.graph.characteristics.is.bipartite=Is bipartite:
diagram.graph.characteristics.is.bipartite.context.help=A graph is called <i>bipartite</i> if its nodes can be partitioned into two sets such that each edge connects two nodes of different sets
diagram.graph.characteristics.is.planar=Is planar:
diagram.graph.characteristics.is.planar.context.help=A graph is called <i>planar</i> if it can be drawn on the plane without edge crossings
diagram.graph.characteristics.is.forest=Is forest:
diagram.graph.characteristics.is.forest.context.help=A graph is called a <i>forest</i> if its connected components are trees
diagram.graph.characteristics.is.tree=Is tree:
diagram.graph.characteristics.is.tree.context.help=A graph is called a <i>tree</i> if it is an acylic connected graph
diagram.graph.characteristics.yes=是
diagram.graph.characteristics.no=否
group.Diagram.AnalyzeGraphGroup.text=Analyze Graph
action.Diagram.AnalyzeGraph.ShowCharacteristics.text=Show Graph Characteristics…
action.Diagram.AnalyzeGraph.DropFocus.text=Drop Focus
action.Diagram.AnalyzeGraph.FocusOnSelectedNodes.text=Focus On Selected Nodes
action.Diagram.AnalyzeGraph.FocusOnNodeNeighbourhood.text=Focus On Node Neighbourhood…
action.Diagram.AnalyzeGraph.FocusOnPathsBetweenTwoNodes.text=Focus On Paths Between Two Nodes…
action.Diagram.AnalyzeGraph.FocusOnCycles.text=Focus On Cycles…
action.Diagram.AnalyzeGraph.MeasureCentrality.text=Measure Centrality…
action.Diagram.AnalyzeGraph.DropCentralityValues.text=Drop Centrality Labels
dialog.diagram.auto.clustering=Automatic Clustering
dialog.diagram.auto.clustering.biconnected=Biconnected components
dialog.diagram.auto.clustering.biconnected.description=Nodes will be grouped such that the nodes within each group are biconnected. Nodes that belong to multiple biconnected components will be assigned to exactly one of these components.
dialog.diagram.auto.clustering.edge.betweenness=Edge betweenness
dialog.diagram.auto.clustering.edge.betweenness.description=In each iteration the edge with the highest betweenness centrality is removed from the graph. The method stops if there are no more edges to remove or if the requested maximum number of groups is found.
dialog.diagram.auto.clustering.quality.time.ratio=Quality/Time Ratio
dialog.diagram.auto.clustering.kmeans=K Means
dialog.diagram.auto.clustering.kmeans.description=The nodes of the graph will be partitioned in K clusters based on their positions such that their distance from the cluster's mean (centroid) is minimized
dialog.diagram.auto.clustering.button.title=執行
diagram.auto.clustering.cluster=群集
diagram.auto.clustering=Automatic clustering…
action.Diagram.AnalyzeGraph.AutoClustering.text=Automatic Clustering…
action.Diagram.AnalyzeGraph.DropClustering.text=Drop Clustering