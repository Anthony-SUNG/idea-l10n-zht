<options>
  <configurable id="preferences.keymap" configurable_name="按键映射">
    <option name="" path="ActionManager" hit="" />
    <option name="maven" path="ActionManager" hit="Maven" />
    <option name="maven" path="ActionManager" hit="Maven 设置" />
    <option name="设置" path="ActionManager" hit="Maven 设置" />
    <option name="下载所有依赖项的文档" path="ActionManager" hit="下载所有依赖项的文档" />
    <option name="下载所有依赖项的源代码" path="ActionManager" hit="下载所有依赖项的源代码" />
    <option name="下载所有依赖项的源代码和文档" path="ActionManager" hit="下载所有依赖项的源代码和文档" />
    <option name="下载所选项目所有依赖项的文档" path="ActionManager" hit="下载所选项目所有依赖项的文档" />
    <option name="下载所选项目所有依赖项的源代码" path="ActionManager" hit="下载所选项目所有依赖项的源代码" />
    <option name="下载所选项目所有依赖项的源代码和文档" path="ActionManager" hit="下载所选项目所有依赖项的源代码和文档" />
    <option name="下载文档" path="ActionManager" hit="下载文档" />
    <option name="下载源代码" path="ActionManager" hit="下载源代码" />
    <option name="下载源代码和" path="ActionManager" hit="下载源代码和/或文档" />
    <option name="或文档" path="ActionManager" hit="下载源代码和/或文档" />
    <option name="下载源代码和文档" path="ActionManager" hit="下载源代码和文档" />
    <option name="为所有项目生成源代码并更新文件夹" path="ActionManager" hit="为所有项目生成源代码并更新文件夹" />
    <option name="为所选阶段" path="ActionManager" hit="为所选阶段/目标分配快捷键" />
    <option name="目标分配快捷键" path="ActionManager" hit="为所选阶段/目标分配快捷键" />
    <option name="仅显示基本阶段" path="ActionManager" hit="仅显示基本阶段" />
    <option name="maven" path="ActionManager" hit="从项目树中取消链接所选 Maven 项目及其子项目" />
    <option name="从项目树中取消链接所选" path="ActionManager" hit="从项目树中取消链接所选 Maven 项目及其子项目" />
    <option name="项目及其子项目" path="ActionManager" hit="从项目树中取消链接所选 Maven 项目及其子项目" />
    <option name="全部展开" path="ActionManager" hit="全部展开" />
    <option name="全部收起" path="ActionManager" hit="全部收起" />
    <option name="分析依赖关系" path="ActionManager" hit="分析依赖关系…" />
    <option name="分配快捷键" path="ActionManager" hit="分配快捷键…" />
    <option name="maven" path="ActionManager" hit="切换 Maven 构建的“跳过测试”模式" />
    <option name="切换" path="ActionManager" hit="切换 Maven 构建的“跳过测试”模式" />
    <option name="构建的" path="ActionManager" hit="切换 Maven 构建的“跳过测试”模式" />
    <option name="模式" path="ActionManager" hit="切换 Maven 构建的“跳过测试”模式" />
    <option name="跳过测试" path="ActionManager" hit="切换 Maven 构建的“跳过测试”模式" />
    <option name="maven" path="ActionManager" hit="切换 Maven 构建的脱机模式" />
    <option name="切换" path="ActionManager" hit="切换 Maven 构建的脱机模式" />
    <option name="构建的脱机模式" path="ActionManager" hit="切换 Maven 构建的脱机模式" />
    <option name="切换" path="ActionManager" hit="切换“跳过测试”模式" />
    <option name="模式" path="ActionManager" hit="切换“跳过测试”模式" />
    <option name="跳过测试" path="ActionManager" hit="切换“跳过测试”模式" />
    <option name="切换脱机模式" path="ActionManager" hit="切换脱机模式" />
    <option name="切换配置文件" path="ActionManager" hit="切换配置文件" />
    <option name="maven" path="ActionManager" hit="取消链接 Maven 项目" />
    <option name="取消链接" path="ActionManager" hit="取消链接 Maven 项目" />
    <option name="项目" path="ActionManager" hit="取消链接 Maven 项目" />
    <option name="在启动运行" path="ActionManager" hit="在启动运行/调试配置前执行所选阶段/目标" />
    <option name="目标" path="ActionManager" hit="在启动运行/调试配置前执行所选阶段/目标" />
    <option name="调试配置前执行所选阶段" path="ActionManager" hit="在启动运行/调试配置前执行所选阶段/目标" />
    <option name="在完全重新构建前执行所选阶段" path="ActionManager" hit="在完全重新构建前执行所选阶段/目标" />
    <option name="目标" path="ActionManager" hit="在完全重新构建前执行所选阶段/目标" />
    <option name="在完全重新构建后执行所选阶段" path="ActionManager" hit="在完全重新构建后执行所选阶段/目标" />
    <option name="目标" path="ActionManager" hit="在完全重新构建后执行所选阶段/目标" />
    <option name="maven" path="ActionManager" hit="在导入 Maven 项目时，递归切换搜索项目" />
    <option name="在导入" path="ActionManager" hit="在导入 Maven 项目时，递归切换搜索项目" />
    <option name="递归切换搜索项目" path="ActionManager" hit="在导入 Maven 项目时，递归切换搜索项目" />
    <option name="项目时" path="ActionManager" hit="在导入 Maven 项目时，递归切换搜索项目" />
    <option name="在构建前执行所选阶段" path="ActionManager" hit="在构建前执行所选阶段/目标" />
    <option name="目标" path="ActionManager" hit="在构建前执行所选阶段/目标" />
    <option name="在构建后执行所选阶段" path="ActionManager" hit="在构建后执行所选阶段/目标" />
    <option name="目标" path="ActionManager" hit="在构建后执行所选阶段/目标" />
    <option name="在运行" path="ActionManager" hit="在运行/调试之前执行…" />
    <option name="调试之前执行" path="ActionManager" hit="在运行/调试之前执行…" />
    <option name="id" path="ActionManager" hit="始终显示工件 ID" />
    <option name="始终显示工件" path="ActionManager" hit="始终显示工件 ID" />
    <option name="id" path="ActionManager" hit="始终显示工件 ID 而不是项目名称" />
    <option name="始终显示工件" path="ActionManager" hit="始终显示工件 ID 而不是项目名称" />
    <option name="而不是项目名称" path="ActionManager" hit="始终显示工件 ID 而不是项目名称" />
    <option name="maven" path="ActionManager" hit="导航到父 Maven 配置文件中的依赖项" />
    <option name="导航到父" path="ActionManager" hit="导航到父 Maven 配置文件中的依赖项" />
    <option name="配置文件中的依赖项" path="ActionManager" hit="导航到父 Maven 配置文件中的依赖项" />
    <option name="maven" path="ActionManager" hit="将 Maven 项目添加并重新加载到项目树" />
    <option name="将" path="ActionManager" hit="将 Maven 项目添加并重新加载到项目树" />
    <option name="项目添加并重新加载到项目树" path="ActionManager" hit="将 Maven 项目添加并重新加载到项目树" />
    <option name="maven" path="ActionManager" hit="将所选 Maven 项目排除/包含在导入范围内" />
    <option name="包含在导入范围内" path="ActionManager" hit="将所选 Maven 项目排除/包含在导入范围内" />
    <option name="将所选" path="ActionManager" hit="将所选 Maven 项目排除/包含在导入范围内" />
    <option name="项目排除" path="ActionManager" hit="将所选 Maven 项目排除/包含在导入范围内" />
    <option name="将模块分组" path="ActionManager" hit="将模块分组" />
    <option name="属性" path="ActionManager" hit="属性" />
    <option name="忽略项目" path="ActionManager" hit="忽略项目" />
    <option name="maven" path="ActionManager" hit="打开 Maven settings.xml" />
    <option name="settings" path="ActionManager" hit="打开 Maven settings.xml" />
    <option name="xml" path="ActionManager" hit="打开 Maven settings.xml" />
    <option name="打开" path="ActionManager" hit="打开 Maven settings.xml" />
    <option name="maven" path="ActionManager" hit="打开 Maven 配置" />
    <option name="打开" path="ActionManager" hit="打开 Maven 配置" />
    <option name="配置" path="ActionManager" hit="打开 Maven 配置" />
    <option name="profiles" path="ActionManager" hit="打开 profiles.xml" />
    <option name="xml" path="ActionManager" hit="打开 profiles.xml" />
    <option name="打开" path="ActionManager" hit="打开 profiles.xml" />
    <option name="settings" path="ActionManager" hit="打开 settings.xml" />
    <option name="xml" path="ActionManager" hit="打开 settings.xml" />
    <option name="打开" path="ActionManager" hit="打开 settings.xml" />
    <option name="maven" path="ActionManager" hit="打开所选模块或库的 Maven 配置文件" />
    <option name="打开所选模块或库的" path="ActionManager" hit="打开所选模块或库的 Maven 配置文件" />
    <option name="配置文件" path="ActionManager" hit="打开所选模块或库的 Maven 配置文件" />
    <option name="profiles" path="ActionManager" hit="打开所选项目的 profiles.xml" />
    <option name="xml" path="ActionManager" hit="打开所选项目的 profiles.xml" />
    <option name="打开所选项目的" path="ActionManager" hit="打开所选项目的 profiles.xml" />
    <option name="maven" path="ActionManager" hit="执行 Maven 目标" />
    <option name="执行" path="ActionManager" hit="执行 Maven 目标" />
    <option name="目标" path="ActionManager" hit="执行 Maven 目标" />
    <option name="执行所选阶段或目标" path="ActionManager" hit="执行所选阶段或目标" />
    <option name="提取管理型依赖项" path="ActionManager" hit="提取管理型依赖项" />
    <option name="maven" path="ActionManager" hit="显示 Maven 连接器" />
    <option name="显示" path="ActionManager" hit="显示 Maven 连接器" />
    <option name="连接器" path="ActionManager" hit="显示 Maven 连接器" />
    <option name="maven" path="ActionManager" hit="显示 Maven 项目的版本" />
    <option name="显示" path="ActionManager" hit="显示 Maven 项目的版本" />
    <option name="项目的版本" path="ActionManager" hit="显示 Maven 项目的版本" />
    <option name="显示忽略的项目" path="ActionManager" hit="显示忽略的项目" />
    <option name="pom" path="ActionManager" hit="显示有效的 POM" />
    <option name="显示有效的" path="ActionManager" hit="显示有效的 POM" />
    <option name="显示版本" path="ActionManager" hit="显示版本" />
    <option name="构建前执行" path="ActionManager" hit="构建前执行" />
    <option name="构建后执行" path="ActionManager" hit="构建后执行" />
    <option name="maven" path="ActionManager" hit="根据 Maven 结构将项目分组" />
    <option name="根据" path="ActionManager" hit="根据 Maven 结构将项目分组" />
    <option name="结构将项目分组" path="ActionManager" hit="根据 Maven 结构将项目分组" />
    <option name="maven" path="ActionManager" hit="添加 Maven 项目" />
    <option name="添加" path="ActionManager" hit="添加 Maven 项目" />
    <option name="项目" path="ActionManager" hit="添加 Maven 项目" />
    <option name="maven" path="ActionManager" hit="添加为 Maven 项目" />
    <option name="添加为" path="ActionManager" hit="添加为 Maven 项目" />
    <option name="项目" path="ActionManager" hit="添加为 Maven 项目" />
    <option name="停用配置文件" path="ActionManager" hit="激活/停用配置文件" />
    <option name="激活" path="ActionManager" hit="激活/停用配置文件" />
    <option name="生成" path="ActionManager" hit="生成" />
    <option name="pom" path="ActionManager" hit="生成并显示有效的 POM" />
    <option name="生成并显示有效的" path="ActionManager" hit="生成并显示有效的 POM" />
    <option name="生成源代码并更新文件夹" path="ActionManager" hit="生成源代码并更新文件夹" />
    <option name="移除运行配置" path="ActionManager" hit="移除运行配置" />
    <option name="maven" path="ActionManager" hit="编辑当前项目的 Maven 集成设置" />
    <option name="编辑当前项目的" path="ActionManager" hit="编辑当前项目的 Maven 集成设置" />
    <option name="集成设置" path="ActionManager" hit="编辑当前项目的 Maven 集成设置" />
    <option name="编辑运行配置" path="ActionManager" hit="编辑运行配置…" />
    <option name="maven" path="ActionManager" hit="转到 Maven 依赖项" />
    <option name="依赖项" path="ActionManager" hit="转到 Maven 依赖项" />
    <option name="转到" path="ActionManager" hit="转到 Maven 依赖项" />
    <option name="maven" path="ActionManager" hit="运行 Maven 构建" />
    <option name="构建" path="ActionManager" hit="运行 Maven 构建" />
    <option name="运行" path="ActionManager" hit="运行 Maven 构建" />
    <option name="maven" path="ActionManager" hit="递归切换搜索 Maven 项目" />
    <option name="递归切换搜索" path="ActionManager" hit="递归切换搜索 Maven 项目" />
    <option name="项目" path="ActionManager" hit="递归切换搜索 Maven 项目" />
    <option name="maven" path="ActionManager" hit="重新加载所有 Maven 项目" />
    <option name="重新加载所有" path="ActionManager" hit="重新加载所有 Maven 项目" />
    <option name="项目" path="ActionManager" hit="重新加载所有 Maven 项目" />
    <option name="maven" path="ActionManager" hit="重新加载所选 Maven 项目" />
    <option name="重新加载所选" path="ActionManager" hit="重新加载所选 Maven 项目" />
    <option name="项目" path="ActionManager" hit="重新加载所选 Maven 项目" />
    <option name="重新加载项目" path="ActionManager" hit="重新加载项目" />
    <option name="重新构建前执行" path="ActionManager" hit="重新构建前执行" />
    <option name="重新构建后执行" path="ActionManager" hit="重新构建后执行" />
    <option name="重构" path="ActionManager" hit="重构" />
  </configurable>
  <configurable id="MavenSettings" configurable_name="Maven">
    <option name="" hit=" T 选项" />
    <option name="t" hit=" T 选项" />
    <option name="选项" hit=" T 选项" />
    <option name="" hit=" usr share maven" />
    <option name="maven" hit=" usr share maven" />
    <option name="share" hit=" usr share maven" />
    <option name="usr" hit=" usr share maven" />
    <option name="" hit=" 重新导入后可能会丢失在其配置中所做的任何更改" />
    <option name="重新导入后可能会丢失在其配置中所做的任何更改" hit=" 重新导入后可能会丢失在其配置中所做的任何更改" />
    <option name="bundled" hit="Bundled  Maven   " />
    <option name="maven" hit="Bundled  Maven   " />
    <option name="maven" hit="Maven" />
    <option name="h" hit="Maven 主路径 H  " />
    <option name="maven" hit="Maven 主路径 H  " />
    <option name="主路径" hit="Maven 主路径 H  " />
    <option name="maven" hit="Use Maven wrapper" />
    <option name="use" hit="Use Maven wrapper" />
    <option name="wrapper" hit="Use Maven wrapper" />
    <option name="从不失败" hit="从不失败" />
    <option name="g" hit="以递归方式执行目标 G " />
    <option name="以递归方式执行目标" hit="以递归方式执行目标 G " />
    <option name="config" hit="使用  mvn maven config 中的设置" />
    <option name="maven" hit="使用  mvn maven config 中的设置" />
    <option name="mvn" hit="使用  mvn maven config 中的设置" />
    <option name="中的设置" hit="使用  mvn maven config 中的设置" />
    <option name="使用" hit="使用  mvn maven config 中的设置" />
    <option name="r" hit="使用插件注册表 R " />
    <option name="使用插件注册表" hit="使用插件注册表 R " />
    <option name="信息" hit="信息" />
    <option name="f" hit="多项目构建失败策略 F  " />
    <option name="多项目构建失败策略" hit="多项目构建失败策略 F  " />
    <option name="失败" hit="失败" />
    <option name="s" hit="始终更新快照 S " />
    <option name="始终更新快照" hit="始终更新快照 S " />
    <option name="已禁用" hit="已禁用" />
    <option name="快速失败" hit="快速失败" />
    <option name="e" hit="打印异常堆栈跟踪 E " />
    <option name="打印异常堆栈跟踪" hit="打印异常堆栈跟踪 E " />
    <option name="无全局策略" hit="无全局策略" />
    <option name="d" hit="显示新 Maven 项目的设置对话框 D " />
    <option name="maven" hit="显示新 Maven 项目的设置对话框 D " />
    <option name="显示新" hit="显示新 Maven 项目的设置对话框 D " />
    <option name="项目的设置对话框" hit="显示新 Maven 项目的设置对话框 D " />
    <option name="最后失败" hit="最后失败" />
    <option name="r" hit="本地仓库 R  " />
    <option name="本地仓库" hit="本地仓库 R  " />
    <option name="c" hit="校验和策略 C  " />
    <option name="校验和策略" hit="校验和策略 C  " />
    <option name="s" hit="用户设置文件 S  " />
    <option name="用户设置文件" hit="用户设置文件 S  " />
    <option name="线程计数" hit="线程计数" />
    <option name="o" hit="脱机工作 O " />
    <option name="脱机工作" hit="脱机工作 O " />
    <option name="致命" hit="致命" />
    <option name="警告" hit="警告" />
    <option name="调试" hit="调试" />
    <option name="l" hit="输出级别 L  " />
    <option name="输出级别" hit="输出级别 L  " />
    <option name="重写" hit="重写" />
    <option name="错误" hit="错误" />
    <option name="默认" hit="默认" />
  </configurable>
  <configurable id="reference.settings.project.maven.importing" configurable_name="正在导入">
    <option name="" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="added" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="after" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="all" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="and" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="api" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="are" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="as" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="be" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="benefit" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="but" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="can" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="changing" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="customizations" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="dependencies" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="deprecated" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="disabling" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="efficient" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="exclude" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="experience" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="experimental" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="flexible" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="folders" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="from" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="functionality" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="future" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="gone" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="groups" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="has" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="idea" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="if" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="import" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="imported" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="in" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="intellij" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="is" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="issue" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="it" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="manual" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="manually" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="maven" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="models" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="module" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="more" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="new" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="next" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="not" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="on" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="option" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="or" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="please" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="preserved" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="problem" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="problems" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="project" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="reimport" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="report" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="s" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="sdk" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="since" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="still" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="such" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="supported" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="the" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="this" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="to" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="tracker" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="try" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="which" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="will" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="with" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="work" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="you" hit=" IntelliJ IDEA has new API to work with project models  which is more efficient and flexible  Maven import can benefit from this API  but since it s still experimental not all functionality is supported  Exclude folders added manually after import are not preserved on the next reimport  Manual Module customizations  such as dependencies or changing Module SDK  are not preserved on the next reimport  Module groups are deprecated in IntelliJ IDEA and will not be supported in Maven import in future  If you experience problems with the imported project  try disabling this option  If the problem is gone  please report it in the issue tracker " />
    <option name="" hit=" IntelliJ IDEA 需要执行列出的一个阶段以发现通过 Maven 插件配置的所有源代码文件夹  请注意 所有 test   阶段都会先生成并编译生产源代码 " />
    <option name="idea" hit=" IntelliJ IDEA 需要执行列出的一个阶段以发现通过 Maven 插件配置的所有源代码文件夹  请注意 所有 test   阶段都会先生成并编译生产源代码 " />
    <option name="intellij" hit=" IntelliJ IDEA 需要执行列出的一个阶段以发现通过 Maven 插件配置的所有源代码文件夹  请注意 所有 test   阶段都会先生成并编译生产源代码 " />
    <option name="maven" hit=" IntelliJ IDEA 需要执行列出的一个阶段以发现通过 Maven 插件配置的所有源代码文件夹  请注意 所有 test   阶段都会先生成并编译生产源代码 " />
    <option name="test" hit=" IntelliJ IDEA 需要执行列出的一个阶段以发现通过 Maven 插件配置的所有源代码文件夹  请注意 所有 test   阶段都会先生成并编译生产源代码 " />
    <option name="所有" hit=" IntelliJ IDEA 需要执行列出的一个阶段以发现通过 Maven 插件配置的所有源代码文件夹  请注意 所有 test   阶段都会先生成并编译生产源代码 " />
    <option name="插件配置的所有源代码文件夹" hit=" IntelliJ IDEA 需要执行列出的一个阶段以发现通过 Maven 插件配置的所有源代码文件夹  请注意 所有 test   阶段都会先生成并编译生产源代码 " />
    <option name="请注意" hit=" IntelliJ IDEA 需要执行列出的一个阶段以发现通过 Maven 插件配置的所有源代码文件夹  请注意 所有 test   阶段都会先生成并编译生产源代码 " />
    <option name="阶段都会先生成并编译生产源代码" hit=" IntelliJ IDEA 需要执行列出的一个阶段以发现通过 Maven 插件配置的所有源代码文件夹  请注意 所有 test   阶段都会先生成并编译生产源代码 " />
    <option name="需要执行列出的一个阶段以发现通过" hit=" IntelliJ IDEA 需要执行列出的一个阶段以发现通过 Maven 插件配置的所有源代码文件夹  请注意 所有 test   阶段都会先生成并编译生产源代码 " />
    <option name="" hit=" target generated sources 的子目录" />
    <option name="generated" hit=" target generated sources 的子目录" />
    <option name="sources" hit=" target generated sources 的子目录" />
    <option name="target" hit=" target generated sources 的子目录" />
    <option name="的子目录" hit=" target generated sources 的子目录" />
    <option name="api" hit="Import using the new IntelliJ Workspace Model API  experimental " />
    <option name="experimental" hit="Import using the new IntelliJ Workspace Model API  experimental " />
    <option name="import" hit="Import using the new IntelliJ Workspace Model API  experimental " />
    <option name="intellij" hit="Import using the new IntelliJ Workspace Model API  experimental " />
    <option name="model" hit="Import using the new IntelliJ Workspace Model API  experimental " />
    <option name="new" hit="Import using the new IntelliJ Workspace Model API  experimental " />
    <option name="the" hit="Import using the new IntelliJ Workspace Model API  experimental " />
    <option name="using" hit="Import using the new IntelliJ Workspace Model API  experimental " />
    <option name="workspace" hit="Import using the new IntelliJ Workspace Model API  experimental " />
    <option name="generate" hit="generate resources" />
    <option name="resources" hit="generate resources" />
    <option name="generate" hit="generate sources" />
    <option name="sources" hit="generate sources" />
    <option name="generate" hit="generate test resources" />
    <option name="resources" hit="generate test resources" />
    <option name="test" hit="generate test resources" />
    <option name="generate" hit="generate test sources" />
    <option name="sources" hit="generate test sources" />
    <option name="test" hit="generate test sources" />
    <option name="process" hit="process resources" />
    <option name="resources" hit="process resources" />
    <option name="process" hit="process sources" />
    <option name="sources" hit="process sources" />
    <option name="process" hit="process test resources" />
    <option name="resources" hit="process test resources" />
    <option name="test" hit="process test resources" />
    <option name="process" hit="process test sources" />
    <option name="sources" hit="process test sources" />
    <option name="test" hit="process test sources" />
    <option name="generated" hit="target generated sources" />
    <option name="sources" hit="target generated sources" />
    <option name="target" hit="target generated sources" />
    <option name="不检测" hit="不检测" />
    <option name="g" hit="为多模块 Maven 项目创建模块组 G " />
    <option name="maven" hit="为多模块 Maven 项目创建模块组 G " />
    <option name="为多模块" hit="为多模块 Maven 项目创建模块组 G " />
    <option name="项目创建模块组" hit="为多模块 Maven 项目创建模块组 G " />
    <option name="idea" hit="为聚合器项目创建 IntelliJ IDEA 模块 使用  pom  打包  M " />
    <option name="intellij" hit="为聚合器项目创建 IntelliJ IDEA 模块 使用  pom  打包  M " />
    <option name="m" hit="为聚合器项目创建 IntelliJ IDEA 模块 使用  pom  打包  M " />
    <option name="pom" hit="为聚合器项目创建 IntelliJ IDEA 模块 使用  pom  打包  M " />
    <option name="为聚合器项目创建" hit="为聚合器项目创建 IntelliJ IDEA 模块 使用  pom  打包  M " />
    <option name="使用" hit="为聚合器项目创建 IntelliJ IDEA 模块 使用  pom  打包  M " />
    <option name="打包" hit="为聚合器项目创建 IntelliJ IDEA 模块 使用  pom  打包  M " />
    <option name="模块" hit="为聚合器项目创建 IntelliJ IDEA 模块 使用  pom  打包  M " />
    <option name="s" hit="以递归方式搜索项目 S " />
    <option name="以递归方式搜索项目" hit="以递归方式搜索项目 S " />
    <option name="maven" hit="使用 Maven 输出目录 O " />
    <option name="o" hit="使用 Maven 输出目录 O " />
    <option name="使用" hit="使用 Maven 输出目录 O " />
    <option name="输出目录" hit="使用 Maven 输出目录 O " />
    <option name="依赖项类型" hit="依赖项类型 " />
    <option name="sdk" hit="内部运行时将用作回退 这不会影响项目 SDK 配置 " />
    <option name="内部运行时将用作回退" hit="内部运行时将用作回退 这不会影响项目 SDK 配置 " />
    <option name="这不会影响项目" hit="内部运行时将用作回退 这不会影响项目 SDK 配置 " />
    <option name="配置" hit="内部运行时将用作回退 这不会影响项目 SDK 配置 " />
    <option name="在外部存储生成的项目文件" hit="在外部存储生成的项目文件" />
    <option name="jdk" hit="导入程序的 JDK " />
    <option name="导入程序的" hit="导入程序的 JDK " />
    <option name="vm" hit="导入程序的 VM 选项 " />
    <option name="导入程序的" hit="导入程序的 VM 选项 " />
    <option name="选项" hit="导入程序的 VM 选项 " />
    <option name="k" hit="将项目文件保留在 K  " />
    <option name="将项目文件保留在" hit="将项目文件保留在 K  " />
    <option name="应导入的依赖项类型的逗号分隔列表" hit="应导入的依赖项类型的逗号分隔列表" />
    <option name="project" hit="排除构建目录  PROJECT ROOT  target " />
    <option name="root" hit="排除构建目录  PROJECT ROOT  target " />
    <option name="target" hit="排除构建目录  PROJECT ROOT  target " />
    <option name="排除构建目录" hit="排除构建目录  PROJECT ROOT  target " />
    <option name="d" hit="文档 D " />
    <option name="文档" hit="文档 D " />
    <option name="正在导入" hit="正在导入" />
    <option name="config" hit="此字段中指定的选项会重写  mvn jvm config 文件中的选项" />
    <option name="jvm" hit="此字段中指定的选项会重写  mvn jvm config 文件中的选项" />
    <option name="mvn" hit="此字段中指定的选项会重写  mvn jvm config 文件中的选项" />
    <option name="文件中的选项" hit="此字段中指定的选项会重写  mvn jvm config 文件中的选项" />
    <option name="此字段中指定的选项会重写" hit="此字段中指定的选项会重写  mvn jvm config 文件中的选项" />
    <option name="注解" hit="注解" />
    <option name="r" hit="源 R " />
    <option name="源" hit="源 R " />
    <option name="生成的源文件夹" hit="生成的源文件夹 " />
    <option name="自动下载" hit="自动下载 " />
    <option name="自动检测" hit="自动检测" />
    <option name="自动检测编译器" hit="自动检测编译器" />
    <option name="u" hit="要用于文件夹更新的阶段 U  " />
    <option name="要用于文件夹更新的阶段" hit="要用于文件夹更新的阶段 U  " />
    <option name="f" hit="项目重新加载时保持源文件夹和测试文件夹 F " />
    <option name="项目重新加载时保持源文件夹和测试文件夹" hit="项目重新加载时保持源文件夹和测试文件夹 F " />
  </configurable>
  <configurable id="reference.settings.project.maven.ignored.files" configurable_name="已忽略的文件">
    <option name="已忽略的文件" hit="已忽略的文件" />
    <option name="允许使用逗号分隔" hit="路径模式 允许使用逗号分隔     和     通配符 " />
    <option name="和" hit="路径模式 允许使用逗号分隔     和     通配符 " />
    <option name="路径模式" hit="路径模式 允许使用逗号分隔     和     通配符 " />
    <option name="通配符" hit="路径模式 允许使用逗号分隔     和     通配符 " />
  </configurable>
  <configurable id="reference.settings.project.maven.runner" configurable_name="运行程序">
    <option name="jre" hit="JRE " />
    <option name="vm" hit="VM 选项 " />
    <option name="选项" hit="VM 选项 " />
    <option name="在后台运行" hit="在后台运行" />
    <option name="ide" hit="将 IDE 构建 运行操作委托给 Maven" />
    <option name="maven" hit="将 IDE 构建 运行操作委托给 Maven" />
    <option name="将" hit="将 IDE 构建 运行操作委托给 Maven" />
    <option name="构建" hit="将 IDE 构建 运行操作委托给 Maven" />
    <option name="运行操作委托给" hit="将 IDE 构建 运行操作委托给 Maven" />
    <option name="属性" hit="属性 " />
    <option name="config" hit="此字段中指定的选项会重写  mvn jvm config 文件中的选项" />
    <option name="jvm" hit="此字段中指定的选项会重写  mvn jvm config 文件中的选项" />
    <option name="mvn" hit="此字段中指定的选项会重写  mvn jvm config 文件中的选项" />
    <option name="文件中的选项" hit="此字段中指定的选项会重写  mvn jvm config 文件中的选项" />
    <option name="此字段中指定的选项会重写" hit="此字段中指定的选项会重写  mvn jvm config 文件中的选项" />
    <option name="e" hit="环境变量 E  " />
    <option name="环境变量" hit="环境变量 E  " />
    <option name="k" hit="跳过测试 K " />
    <option name="跳过测试" hit="跳过测试 K " />
    <option name="运行程序" hit="运行程序" />
  </configurable>
  <configurable id="reference.settings.project.maven.archetype.catalogs" configurable_name="Archetype 目录">
    <option name="archetype" hit="Archetype 目录" />
    <option name="目录" hit="Archetype 目录" />
    <option name="archetype" hit="添加 移除和编辑 archetype 目录" />
    <option name="添加" hit="添加 移除和编辑 archetype 目录" />
    <option name="目录" hit="添加 移除和编辑 archetype 目录" />
    <option name="移除和编辑" hit="添加 移除和编辑 archetype 目录" />
  </configurable>
</options>