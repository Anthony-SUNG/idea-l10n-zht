
jupyter.onboarding.module.name=入门导览
jupyter.onboarding.module.description={0} 中的主要功能概览。
jupyter.onboarding.lesson.name=熟悉 {0}
jupyter.onboarding.intro=借助 DataSpell 提供的 Jupyter Notebook 支持，您可以创建并连接到本地 Notebook，使用远程 Notebook，以及运行和调试代码单元。
jupyter.onboarding.balloon.workspace.view=点击以打开“{0}”工具窗口
jupyter.onboarding.balloon.attach.button=点击以附加目录并选择 {0} 目录。
jupyter.onboarding.balloon.add.notebook=我们来添加新的 Notebook。右键点击 {0} 并选择“{1}”。
jupyter.onboarding.notebook.name=输入任意名称或按 {0} 接受推荐的名称。
jupyter.onboarding.install.jupyter=<ide/> 为 IDE、项目、文件中的问题提供了快速修复，并在编辑器上方显示特殊通知。要继续，请安装 Jupyter 软件包。点击“{0}”。
jupyter.onboarding.wait.jupyter.installed=请等待安装完成。
jupyter.onboarding.wait.indexing=接下来，<ide/> 需要更新内部表示。请耐心等待任务完成。
jupyter.onboarding.install.pandas=<ide/> 会在编辑器中高亮显示错误和问题。红线要求您安装 {0} 软件包。将光标放在高亮显示的 {1} 单词上，然后按 {2}。
jupyter.onboarding.run.first.sample=有一个为本课创建的示例代码单元。按 {0} 运行。
jupyter.onboarding.open.results.in.tab=在输出区域中预览代码单元的执行结果。点击“{0}”链接以在单独的编辑器选项卡中打开数据帧。
jupyter.onboarding.return.to.editor=我们返回笔记本。
jupyter.onboarding.second.cell.intro=我们来基于 Python 内核数据帧构建一些 matplotlib 图。第二个单元格缺少饼图所需的第一列的名称。
jupyter.onboarding.install.matplotlib=我们来安装 {0}。按 {1} 调用上下文操作。
jupyter.onboarding.insert.second.cell=现在，添加第二个单元格。只需点击“{0}”或按 {1}。
jupyter.onboarding.start.completion=您可以快速补全要包含在绘图中的列名称: 开始输入 {0}，之后将显示补全列表。或者，您也可以按 {1} 并继续输入以缩短列表。
jupyter.onboarding.finish.completion=确保选择“{0}”，然后按 {1}。
jupyter.onboarding.third.cell.intro=接下来，我们来修改初始数据集并计算 Python 3.4 和 3.5 的平均内核数。
jupyter.onboarding.right.click.for.split=我们将函数及其用法放在不同的单元中。点击右键并从上下文菜单中选择“{0}”。
jupyter.onboarding.apply.split=点击“{0}”。
jupyter.onboarding.invoke.search.everywhere=您可以执行当前单元及其下面的所有单元。按两次 {0} 可查找必要的 IDE 操作。
jupyter.onboarding.start.typing.run.below=请记住“{0}”对话框。它可以帮助您在代码或 IDE 相关操作或设置中查找实体。只需开始输入 {1}。
jupyter.onboarding.press.run.below=选择所需项后按 {0}。请注意，还有几个其他包含 {1} 和 {2} 的操作。
jupyter.onboarding.debug.introduction=注意执行错误。默认情况下，输出区域的回溯是折叠的。展开回溯可预览详细信息。我们来调试错误。
jupyter.onboarding.debugging.workflow.description=<strong>注意</strong>: 函数定义及其调用位于不同的单元中。要在这种情况下执行调试，您需要首先运行所有单元(已完成)。接下来，您需要开始调试带有定义的单元。我们现在就开始吧。
jupyter.onboarding.start.to.debug.call=现在，您可以调试包含函数调用的单元了。
jupyter.onboarding.fix.problem=我们来更正列名以修正检测到的错误。将 {0} (中间有连字符)替换为 {1} (需要下划线)。
jupyter.onboarding.rerun.all=现在，您可以重新运行已更正的单元了。点击“{0}”或按 {1}。
jupyter.onboarding.congratulations=恭喜! 您已完成本课。
jupyter.onboarding.confirm.package.installation=按 {0} 调用安装。
jupyter.onboarding.wait.pandas.installation=等待软件包安装完毕。
jupyter.onboarding.run.and.select.below=我们来运行此单元，然后添加下方的另一个单元。我们可以通过 {0} 操作来实现: 点击 {1} 或按 {2}。
jupyter.onboarding.cleaunup.informer=要从您的工作区移除 {0} 目录，请右击 {0}，然后在上下文菜单中选择<strong>分离目录...</strong>。或者，您还可以点击清理通知中的链接。
jupyter.onboarding.cleanup.notification.title=从学习数据中清理工作区
jupyter.onboarding.cleanup.notification.description=是否要从工作区中分离包含学习文件的目录?
jupyter.onboarding.cleanup.notification.action=分离 {0}
jupyter.onboarding.promo.text=花费短短 7 分钟去熟悉一下 {0}，了解如何编辑 Jupyter Notebook
dataspell.read.only.message=It is a demo learning module. Do not perform your work here. It may be overwritten by the IDE.\n\
<a href="ift.allow">Click</a> to enable modification of the learning module.